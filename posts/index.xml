
   <rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
     <channel>
       <title>Posts on Matthew DiLoreto</title>
       <link>https://mjdiloreto.github.io/posts/</link>
       <description>Recent content in Posts on Matthew DiLoreto</description>
       <generator>Hugo -- gohugo.io</generator>
       <language>en-us</language>
       <lastBuildDate>Sun, 25 Jul 2021 20:26:00 -0500</lastBuildDate>
       
           <atom:link href="https://mjdiloreto.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
       
       
       <item>
         <title>Meditations: Selected Quotations</title>
         <link>https://mjdiloreto.github.io/posts/meditations-quotations/</link>
         <pubDate>Sun, 25 Jul 2021 20:26:00 -0500</pubDate>
         
         <guid>https://mjdiloreto.github.io/posts/meditations-quotations/</guid>
         <description>&lt;p&gt;While reading Marcus Aurelius&amp;rsquo;s &lt;em&gt;Meditations&lt;/em&gt;, I was struck by the consistent focus on a few central themes.
It reminded me of the propaganda technique, &amp;ldquo;What I say three times is true&amp;rdquo;.
Marcus repeated the same ideas over and over, drilling into himself the mindset he was trying to cultivate.
It&amp;rsquo;s a glimpse not only into the life of a great man, but a personal journey into the person he &lt;span class=&#34;underline&#34;&gt;strove&lt;/span&gt; to be.&lt;/p&gt;
&lt;p&gt;I picked up the Gregory Hays translation at Barnes and Noble by chance.
I was about to go on vacation, it was a paperback for under $10, and I needed something to read on the beach. I recommend this translation over the older translations for ease of reading, and the excellent introduction.&lt;/p&gt;
&lt;p&gt;During my first reading I only managed a few pages in each sitting, since I would often have to think through the terse yet illuminating verses, but I quickly found myself returning to the book after a few hours for another session.
I&amp;rsquo;m normally a habitual reader, only reading for an hour or so each night, and half-an-hour in the morning, but with &lt;em&gt;Meditations&lt;/em&gt; I was captivated.&lt;/p&gt;
&lt;p&gt;Immediately after I finished the twelfth book (each book comprising only around a dozen pages), I knew I had to start back at the beginning, rereading every sentence with an understanding of the gestalt the first readthrough had given me.
I felt the repetition solidify my understanding, and like dogma, strengthen my confidence in the ancient truths revealed by the short passages.&lt;/p&gt;
&lt;p&gt;I was reminded of men I admired in my life.
I saw the strongest features of my mother - her steadfastness and indifference to the opinions of others.&lt;/p&gt;
&lt;p&gt;On this second reading I began to mark passages that I found particularly poignant.
On the third, I again marked passages in the same way.
After the third reading, I kept the set of quotations which I had marked on both my second and third readings, resulting in the list of meditations which I found most compelling.
With this list I ascribed names to the themes that I saw in each one, things like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Self-Determination&lt;/li&gt;
&lt;li&gt;Work&lt;/li&gt;
&lt;li&gt;Virtue&lt;/li&gt;
&lt;li&gt;Truth&lt;/li&gt;
&lt;li&gt;Death&lt;/li&gt;
&lt;li&gt;Eternity&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The rest of this document is that list of meditations, marked with the themes I found and small notes I wrote along the way. They are presented in the order they appear in the book. I have also marked some as &lt;em&gt;favorites&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Like Hunter S. Thompson&amp;rsquo;s practice of copying Hemingway and Fitzgerald hoping that reenacting their genius would have some profound effect on his own writing, I hope that the practice of writing (and rewriting) this selection of meditations will help me think and act in their principled way.&lt;/p&gt;
&lt;div class=&#34;icons&#34; data-icons=&#34;sins virtue&#34; data-chapter=&#34;2.10&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;In comparing sins (the way people do) Theophrastus says that the ones committed out of desire are worse than the ones committed out of anger: which is good philosophy. The angry man seems to turn his back on reason out of a kind of pain and inner convulsion. But the man motivated by desire, who is mastered by pleasure, seems somehow more self-indulgent, less manly in his sins. Theophrastus is right, and philosophically sound, to say that the sin committed out of pleasure deserves a harsher rebuke than the one committed out of pain. The angry man is more like a victim of wrongdoing, provoked by pain to anger. The other man rushes into wrongdoing on his own, moved to action by desire.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;p&gt;Hays notes that this technically is not a stoic viewpoint, since stoicism maintains no metric on the &amp;ldquo;wrongness&amp;rdquo; of sins. Somehow it seems even more stoic for Marcus to hold positions contrary to the school he is associated with. Even if contradictory, whatever resonates with Reason, or aligns with his own nature is truthful.&lt;/p&gt;
&lt;div class=&#34;icons&#34; data-icons=&#34;work happiness expedience&#34; data-chapter=&#34;3.12&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;If you do the job in a principled way, with diligence, energy and patience, if you keep yourself free of distractions, and keep the spirit inside you undamaged, as if you might have to give it back at any moment &amp;ndash;
If you can embrace this without fear or expectation &amp;ndash; can find fulfillment in what you&amp;rsquo;re doing now, as Nature intended, and in superhuman truthfulness (every word, every utterance) &amp;ndash; then your life will be happy.
No one can prevent that.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;p&gt;I love that Marcus uses &amp;ldquo;diligence, energy and patience&amp;rdquo; here. I find it very easy - when I&amp;rsquo;m eager - to let energy take over, and lead me down the wrong path, whether it&amp;rsquo;s biting off more than I can chew, &lt;em&gt;scope creep&lt;/em&gt;, or just doing a rushed job.&lt;/p&gt;
&lt;p&gt;There is something very appealing about the type of absolute focus Marcus displays in his meditations, as though his every waking moment is spent reflecting on his nature and on doing the right things.&lt;/p&gt;
&lt;div class=&#34;icons&#34; data-icons=&#34;harm self-determination&#34; data-chapter=&#34;4.7&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;Choose not to be harmed &amp;ndash; and you won&amp;rsquo;t feel harmed.
Don&amp;rsquo;t feel harmed &amp;ndash; and you haven&amp;rsquo;t been harmed.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;p&gt;A principle I&amp;rsquo;ve held since I was a child, taught to me by my mother.&lt;/p&gt;
&lt;div class=&#34;icons&#34; data-icons=&#34;harm character&#34; data-chapter=&#34;4.8&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;It can ruin your life only if it ruins your character.
Otherwise it cannot harm you &amp;ndash; inside or out.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;!--quoteend--&gt;
&lt;div class=&#34;icons&#34; data-icons=&#34;death&#34; data-chapter=&#34;4.41&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;A little wisp of soul carrying a corpse.&amp;rdquo; - Epictetus&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Memento mori&lt;/em&gt; - a powerful motivator too often ignored as macabre. We can choose to accept and remind ourselves of our mortality, or ignore it until the terrifying day we cannot, wishing we had, and acted on it.&lt;/p&gt;
&lt;div class=&#34;icons&#34; data-icons=&#34;eternity favorite&#34; data-chapter=&#34;4.43&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;Time is a river, a violent current of events, glimpsed once and already carried past us.
Another follows and is gone.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;p&gt;I reread this meditation more than any other - memorized it and repeated it to myself.&lt;/p&gt;
&lt;p&gt;I like the imagery here, and strangely recognized its relation to software.&lt;/p&gt;
&lt;p&gt;Rich Hickey&amp;rsquo;s opinion of software design centers around time as a process, &amp;ldquo;a violent current of events&amp;rdquo;, and holds that software should &lt;em&gt;glimpse&lt;/em&gt; the immutable world in those instances, and let the world continue to evolve as events carry it forward. Software should not stop the world in order to change it, just as we cannot stop the world to impose our will on it.&lt;/p&gt;
&lt;div class=&#34;icons&#34; data-icons=&#34;self-determination&#34; data-chapter=&#34;5.19&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;Things have no hold on the soul. They have no access to it, cannot move or direct it. It is moved and directed by itself alone. It takes the things before it and interprets them as it sees fit.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;!--quoteend--&gt;
&lt;div class=&#34;icons&#34; data-icons=&#34;truth&#34; data-chapter=&#34;6.3&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;Look inward. Don&amp;rsquo;t let the true nature or value of anything elude you.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;p&gt;This meditation is a good example of why the Gregory Hays translation is the best in my opinion for modern readers. The older translations are:&lt;/p&gt;
&lt;p&gt;&amp;ldquo;Look to what is within: do not allow the intrinsic quality or the worth of any one fact to escape you.&amp;rdquo; translated by Arthur Spenser Loat Farquharson in his 1994 &lt;em&gt;The Meditations of the Empereror Marcus Antoninus&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;The George Long translation &lt;em&gt;The Meditations of Marcus Aurelius&lt;/em&gt; written in 1910, says &amp;ldquo;Look within. Let neither the peculiar quality of anything nor its value escape thee.&amp;rdquo; All the other meditations are obscured in this translation as well.&lt;/p&gt;
&lt;p&gt;Even older is Meric Casaubon&amp;rsquo;s 1634 translation in &lt;em&gt;Marcus Aurelius Antoninus, His Meditations concerning himselfe&lt;/em&gt;, &amp;ldquo;Look in, let not either the proper quality, or the true worth
of anything pass thee, before thou hast fully apprehended it&amp;rdquo;. I actually prefer this particular translation to the George Long one.&lt;/p&gt;
&lt;p&gt;If I had read any of these older translations first I might not have been as enthralled as I was with the &lt;em&gt;Meditations&lt;/em&gt;. Hays clearly substituted modern phrases, and took great care to simplify the translation as clearly and concisely as possible. I think the shorter passage has the greatest impact as well.&lt;/p&gt;
&lt;div class=&#34;icons&#34; data-icons=&#34;virtue favorite&#34; data-chapter=&#34;6.6&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;The best revenge is not to be like that.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;!--quoteend--&gt;
&lt;div class=&#34;icons&#34; data-icons=&#34;virtue favorite&#34; data-chapter=&#34;6.16&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;What is it in ourselves that we should prize?&lt;/p&gt;
&lt;p&gt;Not just transpiration (even plants do that).
Or respiration (even beasts and wild animals breathe).
Or being struck by passing thoughts.
Or jerked like a puppet by your own impulses.
Or moving in herds.
Or eating, and relieving yourself afterwards.&lt;/p&gt;
&lt;p&gt;Then what is to be prized?
An audience clapping? No. No more than the clacking of their tongues. Which is all that public praise amounts to &amp;ndash; a clacking of tongues.
So we throw out other people&amp;rsquo;s recognition. What&amp;rsquo;s left for us to prize?
I think it&amp;rsquo;s this: to do (and not do) what we were designed for.
That&amp;rsquo;s the goal of all trades, all arts, and what each of them aims at: that the thing they create should do what it was designed to do. The nurseryman who cares for the vines, the horse trainer, the dog breeder &amp;ndash; this is what they aim at. And teaching and education &amp;ndash; what else are they trying to accomplish?
So that&amp;rsquo;s what we should prize. Hold on to that, and you won&amp;rsquo;t be tempted to aim at anything else.
And if you can&amp;rsquo;t stop prizing a lot of other things? Then you&amp;rsquo;ll never be free &amp;ndash; free, independent, imperturbable. Because you&amp;rsquo;ll always be envious and jealous, afraid that people might come and take it all away from you. Plotting against those who have them &amp;ndash; those things you prize. People who need those things are bound to be a mess &amp;ndash; and bound to take out their frustrations on the gods. Whereas to respect your own mind &amp;ndash; to prize it &amp;ndash; will leave you satisfied with your own self, well integrated into your community and in tune with the gods as well &amp;ndash; embracing what they allot you, and what they ordain.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;p&gt;If only one meditation could have an effect on me, I hope it would be this one.&lt;/p&gt;
&lt;div class=&#34;icons&#34; data-icons=&#34;work&#34; data-chapter=&#34;6.19&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;Not to assume it&amp;rsquo;s impossible because you find it hard. But to recognize that if it&amp;rsquo;s humanly possible, you can do it too.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;!--quoteend--&gt;
&lt;div class=&#34;icons&#34; data-icons=&#34;truth harm&#34; data-chapter=&#34;6.21&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;If you can refute me &amp;ndash; show me I&amp;rsquo;m making a mistake or looking at things from the wrong perspective &amp;ndash; I&amp;rsquo;ll gladly change. It&amp;rsquo;s the truth I&amp;rsquo;m after, and the truth never harmed anyone. What harms us is to persist in self-deceit and ignorance.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;p&gt;Important to keep in mind during the ongoing culture wars.&lt;/p&gt;
&lt;div class=&#34;icons&#34; data-icons=&#34;eternity change&#34; data-chapter=&#34;6.37&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;If you&amp;rsquo;ve seen the present then you&amp;rsquo;ve seen everything &amp;ndash; as it&amp;rsquo;s been since the beginning, as it will be forever. The same substance, the same form. All of it.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;p&gt;I&amp;rsquo;m amazed by the &lt;em&gt;correctness&lt;/em&gt; of Marcus&amp;rsquo;s view of eternity. Over a thousand years before the discovery of the laws of thermodynamics, he saw that processes &amp;ldquo;in the small&amp;rdquo; never changed the whole.&lt;/p&gt;
&lt;div class=&#34;icons&#34; data-icons=&#34;optimism virtue&#34; data-chapter=&#34;6.48&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;When you need encouragement, think of the qualities the people around you have: this one&amp;rsquo;s energy, that one&amp;rsquo;s modesty, another&amp;rsquo;s generosity, and so on. Nothing is as encouraging as when virtues are visibly embodied in the people around us, when we&amp;rsquo;re practically showered with them
It&amp;rsquo;s good to keep this in mind.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;p&gt;I would like to live this way.&lt;/p&gt;
&lt;div class=&#34;icons&#34; data-icons=&#34;help favorite&#34; data-chapter=&#34;7.7&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;Don&amp;rsquo;t be ashamed to need help. Like a soldier storming a wall, you have a mission to accomplish. And if you&amp;rsquo;ve been wounded and you need a comrade to pull you up? So what?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;!--quoteend--&gt;
&lt;div class=&#34;icons&#34; data-icons=&#34;present&#34; data-chapter=&#34;7.8&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;Forget the future. When and if it comes, you&amp;rsquo;ll have the same resources to draw on &amp;ndash; the same &lt;em&gt;logos&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;p&gt;I have actually successfully implemented this meditation in my daily life since reading it, at least as it applies to software development. In that light it&amp;rsquo;s a bit like the addage &amp;ldquo;premature optimization is the root of all evil&amp;rdquo;. More generally I guess that would be &amp;ldquo;prematurely thinking about the future is unhelpful&amp;rdquo;.&lt;/p&gt;
&lt;div class=&#34;icons&#34; data-icons=&#34;character virtue favorite&#34; data-chapter=&#34;7.12&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;Straight, not straightened.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;p&gt;The best people I know live this way. Doing the right thing not because of &lt;em&gt;any&lt;/em&gt; external motivator. It just seems to be a part of &lt;em&gt;who they are&lt;/em&gt;.&lt;/p&gt;
&lt;div class=&#34;icons&#34; data-icons=&#34;possessions&#34; data-chapter=&#34;7.27&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;Treat what you don&amp;rsquo;t have as nonexistent. Look at what you have, the things you value most, and think of how much you&amp;rsquo;d crave them if you didn&amp;rsquo;t have them. But be careful. Don&amp;rsquo;t feel such satisfaction that you start to overvalue them &amp;ndash; that it would upset you to lose them.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;p&gt;I&amp;rsquo;ve always been unsentimental about my belongings.
Maybe it&amp;rsquo;s a learned behavior from moving six times in the last six years - every thing I have is another thing I have to &lt;em&gt;move&lt;/em&gt;.
But I do have things I feel protective of:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;my cast iron pans&lt;/li&gt;
&lt;li&gt;my collection of books&lt;/li&gt;
&lt;li&gt;my leather boots and hiking pants&lt;/li&gt;
&lt;li&gt;an engraved watch from my fiance (girlfriend at the time)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All these things are technically replaceable, but it would upset me to lose them.
But the point here is that even &lt;em&gt;irreplaceable&lt;/em&gt; things should not be valued so highly.
My takeaway is not to own nothing and live like Diogenes, but to be content &lt;em&gt;no matter what I do (or do not) have&lt;/em&gt;.&lt;/p&gt;
&lt;div class=&#34;icons&#34; data-icons=&#34;virtues truth self-determination&#34; data-chapter=&#34;7.29&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;Discard your misconceptions.
Stop being jerked like a puppet.
Limit yourself to the present.
Understand what happens &amp;ndash; to you, to others.
Analyze what exists, break it all down: material and cause.
Anticipate your final hours.
Other people&amp;rsquo;s mistakes? Leave them to their masters.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;p&gt;I quit social media altogether after reading &lt;em&gt;Meditations&lt;/em&gt;. I felt like I &lt;em&gt;was&lt;/em&gt; being &amp;ldquo;jerked like a puppet&amp;rdquo;, especially in 2020 when every post, video, and article inflamed me. For what?&lt;/p&gt;
&lt;div class=&#34;icons&#34; data-icons=&#34;virtues self-determination&#34; data-chapter=&#34;7.54&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;Everywhere, at each moment, you have the option:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;to accept this event with humility&lt;/li&gt;
&lt;li&gt;to treat this person as he should be treated&lt;/li&gt;
&lt;li&gt;to approach this thought with care, so that nothing irrational creeps in.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;p&gt;It always amazes me that these thoughts came from the most powerful man in the most powerful empire the world had ever known - that he should be concerned with humility, and treating others appropriately.&lt;/p&gt;
&lt;p&gt;Even as someone with a more humble life it would be difficult to follow this advice &amp;ldquo;everywhere, at each moment&amp;rdquo;, let alone in his deified position.&lt;/p&gt;
&lt;div class=&#34;icons&#34; data-icons=&#34;acceptance favorite&#34; data-chapter=&#34;7.57&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;To love only what happens, what was destined. No greater harmony.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;p&gt;I think this maxim summarizes stoicism perfectly. Everything which happens is governed by logos - the &amp;ldquo;violent current of events&amp;rdquo; all predetermined. You have no control over what happens, only the way you react to it. While most people struggle against the inevitable, a stoic doesn&amp;rsquo;t just accept it, but &lt;em&gt;loves&lt;/em&gt; it, even when what happens is terrible or painful.&lt;/p&gt;
&lt;div class=&#34;icons&#34; data-icons=&#34;virtue favorite&#34; data-chapter=&#34;7.69&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;Perfection of character: to live your last day, every day, without frenzy, or sloth, or pretense.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;p&gt;I think about this passage a lot.
What I like most about it is &amp;ldquo;without frenzy&amp;rdquo;.
Sloth is a well-established sin, even in modern society; Good people place value on hard work, and despise laziness.
But the opposite is also harmful, because we cannot keep up frenetic activity.&lt;/p&gt;
&lt;p&gt;Marcus is warning us about &lt;em&gt;burnout&lt;/em&gt;.&lt;/p&gt;
&lt;div class=&#34;icons&#34; data-icons=&#34;obstacles self-determination&#34; data-chapter=&#34;8.32&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;You have to assemble your life yourself &amp;ndash; action by action. And be satisfied if each one achieves its goal, as far as it can. No one can keep that from happening.&lt;/p&gt;
&lt;p&gt;&amp;ndash; But there are external obstacles&amp;hellip;&lt;/p&gt;
&lt;p&gt;Not to behaving with justice, self-control, and good sense.&lt;/p&gt;
&lt;p&gt;&amp;ndash; Well, but perhaps to some more concrete action.&lt;/p&gt;
&lt;p&gt;But if you accept the obstacle and work with what you&amp;rsquo;re given, an alternative will present itself&lt;/p&gt;
&lt;p&gt;&amp;ndash; another piece of what you&amp;rsquo;re trying to assemble. Action by action.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;!--quoteend--&gt;
&lt;div class=&#34;icons&#34; data-icons=&#34;endurance pain&#34; data-chapter=&#34;8.36&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;Don&amp;rsquo;t let your imagination be crushed by life as a whole. Don&amp;rsquo;t try to picture everything bad that could possibly happen. Stick with the situation at hand, and ask, &amp;ldquo;Why is this so unbearable? Why can&amp;rsquo;t I endure it?&amp;rdquo; You&amp;rsquo;ll be embarrassed to answer.
Then remind yourself that past and future have no power over you. Only the present &amp;ndash; and even that can be minimized. Just mark off its limits. And if your mind tries to claim that it can&amp;rsquo;t hold out against &lt;em&gt;that&lt;/em&gt;&amp;hellip; well, then, heap shame upon it.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;p&gt;There is a movie (or maybe a TV show, I can&amp;rsquo;t remember which) with a quotation that always stuck out to me (though obviously not enough for me to remember the specific film or show itself). A character describes how she tolerates some unpleasant thing. She says something along the lines of, &amp;ldquo;When I feel like I can&amp;rsquo;t take anymore I think, &amp;lsquo;just ten more seconds&amp;rsquo;, and I can inevitably tolerate such a short amount of time. Then, at the end of those ten seconds I think again, &amp;lsquo;just ten more seconds&amp;rsquo;&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;I wanted to say this was from the 2015 movie &lt;em&gt;Room&lt;/em&gt; (not the infamous 2003 &lt;em&gt;The Room&lt;/em&gt;, subject of James Franco&amp;rsquo;s &lt;em&gt;The Disaster Artist&lt;/em&gt;), but searching the script for &amp;ldquo;seconds&amp;rdquo; or &amp;ldquo;minutes&amp;rdquo; didn&amp;rsquo;t turn up anything.&lt;/p&gt;
&lt;p&gt;This meditation reminds me of that strategy, whatever the source.&lt;/p&gt;
&lt;div class=&#34;icons&#34; data-icons=&#34;self-determination control&#34; data-chapter=&#34;8.47&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;External things are not the problem. It&amp;rsquo;s your assessment of them. Which you can erase right now.
If the problem is something in your own character, who&amp;rsquo;s stopping you from setting your mind straight?
And if it&amp;rsquo;s that you&amp;rsquo;re not doing something you think you should be, why not just do it?
&amp;ndash; But there are insuperable obstacles.
Then it&amp;rsquo;s not a problem. The cause of your inaction lies outside you.
&amp;ndash; But how can I go on living with that undone?
Then depart, with a good conscience, as if you&amp;rsquo;d done it, embracing the obstacles too.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;!--quoteend--&gt;
&lt;div class=&#34;icons&#34; data-icons=&#34;truth favorite&#34; data-chapter=&#34;9.17&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;A rock thrown in the air. It loses nothing by coming down, gained nothing by going up.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;p&gt;It isn&amp;rsquo;t the destination, &lt;em&gt;nor&lt;/em&gt; the journey it would seem.&lt;/p&gt;
&lt;div class=&#34;icons&#34; data-icons=&#34;death&#34; data-chapter=&#34;9.21&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;When we cease from activity, or follow a thought to its conclusion, it&amp;rsquo;s a kind of death. And it doesn&amp;rsquo;t harm us. Think about your life: childhood, boyhood, youth, old age. Every transformation a kind of dying. Was that so terrible?
Think about life with your grandfather, your mother, your adopted father. Realize how many other deaths and transformations and endings there have been and ask youself: Was that so terrible?
Then neither will the close of your life be &amp;ndash; its ending and transformation.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;!--quoteend--&gt;
&lt;div class=&#34;icons&#34; data-icons=&#34;eternity&#34; data-chapter=&#34;9.32&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;You can discard most of the junk that clutters your mind &amp;ndash; things that exist only there &amp;ndash; and clear out space for yourself:&lt;/p&gt;
&lt;p&gt;&amp;hellip;by comprehending the scale of the world
&amp;hellip;by contemplating infinite time
&amp;hellip;by thinking of the speed with which things change &amp;ndash; each part of every thing; the narrow space between our birth and death; the infinite time before the equally unbounded time that follows.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;!--quoteend--&gt;
&lt;div class=&#34;icons&#34; data-icons=&#34;eternity&#34; data-chapter=&#34;10.17&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;Continual awareness of all time and space, of the size and life of the things around us. A grape seed in infinite space. A half twist of a corkscrew against eternity.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;p&gt;The preceding two meditations form an excellent strategy for controlling one&amp;rsquo;s emotions, but it is very difficult to implement. I think it&amp;rsquo;s a prerequisite for developing the &lt;em&gt;superego&lt;/em&gt; - taking oneself out of the current situation and shifting perspective to the macro. With this perspective emotions seem so small.&lt;/p&gt;
&lt;div class=&#34;icons&#34; data-icons=&#34;death&#34; data-chapter=&#34;10.29&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;Stop whatever you&amp;rsquo;re doing for a moment and ask yourself: Am I afraid of death because I won&amp;rsquo;t be able to do &lt;em&gt;this&lt;/em&gt; anymore?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;!--quoteend--&gt;
&lt;div class=&#34;icons&#34; data-icons=&#34;honesty favorite&#34; data-chapter=&#34;11.15&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;The despicable phoniness of people who say, &amp;ldquo;Listen, I&amp;rsquo;m going to level with you here.&amp;rdquo; What does that mean? It shouldn&amp;rsquo;t even need to be said. It should be obvious &amp;ndash; written in block letters on your forehead. It should be audible in your voice, visible in your eyes like a lover who looks into your face and takes in the whole story at a glance. A straightforward, honest person should be like someone who stinks: when you&amp;rsquo;re in the same room with him, you know it. But false straightforwardness is like a knife in the back.
False friendship is the worst, Avoid it at all costs. If you&amp;rsquo;re honest and straightforward and mean well, it should show in your eyes. It should be unmistakable.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;p&gt;This is one of my favorite pieces of prose in the &lt;em&gt;Meditations&lt;/em&gt;. I&amp;rsquo;d even say it&amp;rsquo;s funny. Sometimes obvious truth can make us laugh.&lt;/p&gt;
&lt;div class=&#34;icons&#34; data-icons=&#34;virtue&#34; data-chapter=&#34;11.19&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;Four habits of thought to watch for, and erase from your mind when you catch them. Tell yourself:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This thought is unnecessary.&lt;/li&gt;
&lt;li&gt;This one is destructive to the people around you.&lt;/li&gt;
&lt;li&gt;This wouldn&amp;rsquo;t be what you really think (to say what you don&amp;rsquo;t think &amp;ndash; the definition of absurdity).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And the fourth reason for self-reproach: that the more divine part of you has been beaten and subdued by the degraded mortal part &amp;ndash; the body and its stupid self-indulgence.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;p&gt;&amp;ldquo;that the more divine part of you has been beaten and subdued by the degraded mortal part &amp;ndash; the body and its stupid self-indulgence&amp;rdquo; - again the connection with &lt;em&gt;superego&lt;/em&gt;.&lt;/p&gt;
&lt;div class=&#34;icons&#34; data-icons=&#34;self-control&#34; data-chapter=&#34;11.37&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;We need to master the art of acquiescence. We need to pay attention to our impulses, making sure they don&amp;rsquo;t go unmoderated, that they benefit others, that they&amp;rsquo;re worthy of us. We need to steer clear of desire in any form and not try to avoid what&amp;rsquo;s beyond our control.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;!--quoteend--&gt;
&lt;div class=&#34;icons&#34; data-icons=&#34;work&#34; data-chapter=&#34;12.6&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;Practice even what seems impossible.
The left hand is useless at almost everything, for lack of practice. But it guides the reins better than the right. From practice.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;!--quoteend--&gt;
&lt;div class=&#34;icons&#34; data-icons=&#34;death&#34; data-chapter=&#34;12.23&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;A given action that stops when it&amp;rsquo;s supposed to is none the worse for stopping. Nor the person engaged in it either. So too with the succession of actions we call &amp;ldquo;life.&amp;rdquo; If it ends when it&amp;rsquo;s supposed to, it&amp;rsquo;s none the worse for that. And the person who comes to the end of the line has no cause for complaint. The time and stopping point are set by nature &amp;ndash; our own nature, in some cases (death from old age); or nature as a whole, whose parts, shifting and changing, constantly renew the world, and keep it on schedule.
Nothing that benefits all things can be ugly or out of place. The end of life is not an evil &amp;ndash;  it doesn&amp;rsquo;t disgrace us. (Why should we be ashamed of an involuntary act that injures no one?). It&amp;rsquo;s a good thing &amp;ndash; scheduled by the world, promoting it, promoted by it.
This is how we become godlike &amp;ndash; following God&amp;rsquo;s path, and reason&amp;rsquo;s goals.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
</description>
       </item>
       
       <item>
         <title>Problems with Programming Books</title>
         <link>https://mjdiloreto.github.io/posts/problems-with-programming-books/</link>
         <pubDate>Wed, 02 Jun 2021 21:44:00 -0400</pubDate>
         
         <guid>https://mjdiloreto.github.io/posts/problems-with-programming-books/</guid>
         <description>&lt;p&gt;My girlfriend&amp;rsquo;s sister is taking her first programming course using an &amp;ldquo;interactive&amp;rdquo; online textbook (a &lt;a href=&#34;https://www.zybooks.com/&#34;&gt;Zybook&lt;/a&gt;) for school, and I offered to tutor her.&lt;/p&gt;
&lt;p&gt;When she needs help, she usually sends me 3 pictures:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The text of the problem statement,&lt;/li&gt;
&lt;li&gt;Her python code, and&lt;/li&gt;
&lt;li&gt;The error message (there is almost always an error message).&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I then decipher what exactly the question is asking for, what the error message says, what her code is doing, and finally write up an explanation to help her understand all of it.&lt;/p&gt;
&lt;p&gt;Sometimes it&amp;rsquo;s easier to facetime.&lt;/p&gt;
&lt;p&gt;Throughout this process I&amp;rsquo;ve maintained notes about what trips her up, because it&amp;rsquo;s been so long since I started programming that I don&amp;rsquo;t actually remember what it was like not to know these things.
I&amp;rsquo;ve come to the conclusion that programming &amp;ldquo;books&amp;rdquo; (usually a hypertext document consisting of long passages of static text followed by graded problems) are seriously flawed.&lt;/p&gt;
&lt;p&gt;My perspective is also colored by my personal experience with &lt;a href=&#34;http://www.codecademy.com&#34;&gt;codecademy&lt;/a&gt; circa 2014, and later in 2019, as well as a few other courses from college (the names of which I cannot recall), so a lot might have changed in some of the better tools, but I&amp;rsquo;m certain there&amp;rsquo;s a lot more that can be done.&lt;/p&gt;
&lt;p&gt;The main ingredient they all seem lack is &lt;em&gt;interactivity&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Any fan of Brett Victor will know the importance of interactivity, but for the unitiated, allow me (him) to enlighten you:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=PUv66718DII&#34;&gt;Brett Victor: Inventing on Principle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://worrydream.com/LadderOfAbstraction/&#34;&gt;The Ladder of Abstraction&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(Seriously, watch the video from Brett, and read this essay too while you&amp;rsquo;re at it. The ideas he presents are wonderfully &lt;em&gt;simple&lt;/em&gt;. I guarantee they will leave a lasting impression.)&lt;/p&gt;
&lt;p&gt;What interactivity does for a first-time programming language learner is remove barriers.
A good programming book empowers her to find answers to her questions on her own.
It provides endless &lt;em&gt;contextual information&lt;/em&gt; for every part of the interface, code, and errors (no, not just some static textual explanation of the topic at-hand 5 pages up in the document).
The fewer buttons she has to click to see a result, the more help she has decoding an error message, the more likely she is to keep going, and keep coding.&lt;/p&gt;
&lt;p&gt;I boiled down my experience tutoring to a few areas for improvement for a truly interactive programming book.&lt;/p&gt;
&lt;h2 id=&#34;language-specific-ergonomics&#34;&gt;Language-specific Ergonomics&lt;/h2&gt;
&lt;p&gt;Let&amp;rsquo;s start with something programming books usually get right &amp;mdash; isolating the beginner from the technology.&lt;/p&gt;
&lt;p&gt;As software developers, we love tinkering on the command line.
We like to connect services and write scripts and run test suites and version control source code files.
We like to be in control of a system.&lt;/p&gt;
&lt;p&gt;This is anathema to the first-time programming language learner.&lt;/p&gt;
&lt;p&gt;A beginner should not have to set up anything.
She should be presented immediately with the opportunity to read, execute, and write programs without any effort.
Most books at least solve this problem by providing code execution tools (a bare text-editor and a &amp;ldquo;RUN CODE&amp;rdquo; button usually) from the browser, and some tools like &lt;a href=&#34;http://www.repl.it&#34;&gt;repl.it&lt;/a&gt; are doing very cool things in this space.&lt;/p&gt;
&lt;p&gt;I do think there is more work to be done regarding in-context documentation of language features, though.&lt;/p&gt;
&lt;h2 id=&#34;partial-results&#34;&gt;Partial Results&lt;/h2&gt;
&lt;p&gt;One thing I wish more books emphasized is the &lt;em&gt;substitution model&lt;/em&gt; of programming.
That is, the iterative process of substituting subexpressions for their results to make up larger results in a program, e.g;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-clojure&#34; data-lang=&#34;clojure&#34;&gt;(+ &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; (+ &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;))
&lt;span style=&#34;color:#75715e&#34;&gt;; becomes&lt;/span&gt;
(+ &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;)
&lt;span style=&#34;color:#75715e&#34;&gt;; becomes&lt;/span&gt;
&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Technically this model only applies to expressions, so in a language like Python there are exceptions, but the same basic principle carries over at least somewhat in every programming language, and it is not an obvious principle.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s not obvious to a beginner that:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;age_input &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; input()
age &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; int(age_input)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;is exactly the same as:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;age &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; int(input())
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;unless she is explicitly told so.
But the abstract knowledge does not stick immediately, because she will then balk at:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;names &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; input()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;split()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The code editor should show the results of each part of chained method calls, and of each subexpression in an expression.&lt;/p&gt;
&lt;p&gt;As a side note, when describing the previous example I was asked, &amp;ldquo;How come it isn&amp;rsquo;t&amp;rdquo;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;ages &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; split(input())
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;What a good question, and the explanation will be completely incomprehensible to a beginner:&lt;/p&gt;
&lt;p&gt;&amp;ldquo;Well in Python everything is an object (except for primitives), and those objects have methods, which are really just functions whose first argument is always the object instance itself. Isn&amp;rsquo;t programming fun?&amp;rdquo;&lt;/p&gt;
&lt;p&gt;This is a huge WTF for beginners, and I remember spending hours googling &amp;ldquo;what is an object in programming&amp;rdquo; when I first started to code.
It&amp;rsquo;s irrelevant to teach a beginner these things, but languages like Python force this confusion from the start.&lt;/p&gt;
&lt;p&gt;That&amp;rsquo;s why &lt;a href=&#34;https://htdp.org/&#34;&gt;How To Design Programs&lt;/a&gt; uses a Lisp as its teaching language.
Any syntax is overhead which distracts from the essence of programming.&lt;/p&gt;
&lt;p&gt;A good interactive programming book might not want to teach Lisp, but it should give insight into the results of each part of every expression.&lt;/p&gt;
&lt;h2 id=&#34;error-messages&#34;&gt;Error Messages&lt;/h2&gt;
&lt;p&gt;This is what infuriates me about every single book I&amp;rsquo;ve come across &amp;mdash; they all forward the bare error messages from the interpreter/compiler/VM/whatever straight to the user.
This in and of itself is not really an issue since becoming familiar with error messages is a part of software development, but the problem is that they all &lt;em&gt;stop&lt;/em&gt; there.&lt;/p&gt;
&lt;p&gt;What do software developers do when they get an error message?
Well, it depends on the error:&lt;/p&gt;
&lt;h4 id=&#34;syntax-errors&#34;&gt;Syntax errors:&lt;/h4&gt;
&lt;p&gt;My IDE catches this &lt;em&gt;in context&lt;/em&gt; AND usually provides a quick fix.
A beginner is already used to this common paradigm (e.g. spellcheck).
There is no reason for any programming book not to have this feature (Zybooks does not have it).&lt;/p&gt;
&lt;h4 id=&#34;runtime-errors&#34;&gt;Runtime errors:&lt;/h4&gt;
&lt;p&gt;StackOverflow.
There is no avoiding the value of google-searching the error message.
I would like to see a book that does this on behalf of the user, suggesting a search whenever an error occurs; or preferably suggesting a &lt;em&gt;useful&lt;/em&gt; search from a previous user of the book i.e. a post which solved &lt;em&gt;this&lt;/em&gt; specific error in &lt;em&gt;this&lt;/em&gt; specific graded problem.&lt;/p&gt;
&lt;p&gt;One error message is usually tolerable, but it&amp;rsquo;s when the beginner tries 2, 3, or 4 different things, and gets &lt;em&gt;different&lt;/em&gt; errors that she quits.
My role as a tutor is essentially an error explainer.
I explain what the error means generally, then what it means in this context, then &lt;em&gt;why&lt;/em&gt; it happened in this context, what line of code is &lt;em&gt;really&lt;/em&gt; to blame (you got a SynaxError on line 11 because you forgot a &lt;code&gt;:&lt;/code&gt; on line 10), and finally prompt with a leading question toward a solution (or just give the solution if it isn&amp;rsquo;t obvious).
There&amp;rsquo;s no reason the book can&amp;rsquo;t do a lot of this work, especially considering it is a document visited almost exclusively by beginners who generate and ultimately resolve the same errors over and over again.
There is opportunity to leverage the book&amp;rsquo;s data collection to help solve this problem.&lt;/p&gt;
&lt;h2 id=&#34;case-analysis&#34;&gt;Case Analysis&lt;/h2&gt;
&lt;p&gt;This is where the actual programming work begins.
Alan Perlis famously &lt;a href=&#34;http://www.cs.yale.edu/homes/perlis-alan/quotes.html&#34;&gt;said&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Programmers are not to be measured by their ingenuity and their logic but by the completeness of their case analysis.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The problem is that it&amp;rsquo;s very difficult for beginners to differentiate between errors due to incomplete case analysis and &amp;ldquo;programming&amp;rdquo; errors (like using the wrong variable, forgetting a &lt;code&gt;+1&lt;/code&gt; somewhere, etc.)&lt;/p&gt;
&lt;p&gt;Software developers write tests in order to increase their confidence in their case analysis, and run those tests when the relevant code changes.
Beginners do not write tests, because they do not yet know the value of doing so.&lt;/p&gt;
&lt;p&gt;Most books I&amp;rsquo;ve come across usually provide some mechanism for user-supplied inputs, and typically include a short test suite for graded problems, but this is not enough.
Books should provide this list of cases and run the tests whenever the code is updated.
The beginner should know &lt;em&gt;immediately&lt;/em&gt; whenever one of her changes influenced the outcome of a test case.&lt;/p&gt;
&lt;p&gt;The book should also provide test cases for the functions relevant to a solution, i.e. I should be able to hover over `pow` in some Python code and see:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;pow(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)  &lt;span style=&#34;color:#75715e&#34;&gt;# -&amp;gt; 4&lt;/span&gt;
pow(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;)  &lt;span style=&#34;color:#75715e&#34;&gt;# -&amp;gt; 8&lt;/span&gt;
pow(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;)  &lt;span style=&#34;color:#75715e&#34;&gt;# -&amp;gt; 16&lt;/span&gt;
pow(&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;)  &lt;span style=&#34;color:#75715e&#34;&gt;# -&amp;gt; 27&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# ... etc.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;So far I have not come across any books which have immediate feedback like this.&lt;/p&gt;
&lt;h2 id=&#34;exploration&#34;&gt;Exploration&lt;/h2&gt;
&lt;p&gt;This is by far the most important aspect of programming that books fail at.
Almost every one of my tutoring texts includes the phrase &amp;ldquo;open up your terminal and type &lt;code&gt;python3&lt;/code&gt;&amp;rdquo; (I demonstrated the REPL live a couple times; I&amp;rsquo;m not a sadist).
I then say, &amp;ldquo;See what happens when you do:&amp;rdquo; and provide a verbatim copy of a repl session demonstrating whatever concept I was discussing.&lt;/p&gt;
&lt;p&gt;You might be skeptical about the merits of REPL-driven development as a style of software-engineering, and prefer TDD or something. That&amp;rsquo;s fine.
It is undeniable though that a repl is &lt;em&gt;more interactive&lt;/em&gt; than TDD, and in our hypothetical programming book we&amp;rsquo;ve already provided the user with a live test suite.
The code editors these programming books use really need to integrate something like &lt;a href=&#34;https://quokkajs.com/&#34;&gt;Quokka&lt;/a&gt; or &lt;a href=&#34;http://lighttable.com/&#34;&gt;Lighttable&lt;/a&gt; for whatever language the book uses.&lt;/p&gt;
&lt;p&gt;They should also suggest other things to try.
This might have to be problem-specific, but if the preceding chapter discusses the &lt;code&gt;split&lt;/code&gt; and &lt;code&gt;join&lt;/code&gt; functions, then wherever a list appears in the code, the editor should show it &lt;code&gt;join&lt;/code&gt;&amp;lsquo;ed, and wherever there is a string, the editor should show it &lt;code&gt;split&lt;/code&gt;&amp;lsquo;ed.
If there is a string in the code, the editor should show how it is made up of characters and how to access them.&lt;/p&gt;
&lt;p&gt;I imagine this type of interactivity could prove overwhelming, so I think it would be best to limit its scope to just the topics discussed in the chapter.
For example, one chapter might discuss character codes (in Python using &lt;code&gt;ord&lt;/code&gt; and &lt;code&gt;chr&lt;/code&gt;), so should show the structure of all the strings in the code with their &lt;code&gt;ord&lt;/code&gt;, and translate numeric literals using &lt;code&gt;chr&lt;/code&gt;.
The next chapter would not need to show this same context for numeric literals, but instead might discuss modular arithmetic, so numeric literals should then show their result modulo some base.&lt;/p&gt;
&lt;p&gt;I assumed since the REPL is such a simple piece of interactive software that it would be super useful for a beginner, but what I noticed is that, when presented with an empty prompt, she just didn&amp;rsquo;t know what to type next.
I realized suggestions for things to try are imperative.&lt;/p&gt;
&lt;h2 id=&#34;memory&#34;&gt;Memory&lt;/h2&gt;
&lt;p&gt;Disclaimer: I&amp;rsquo;ve never seen &lt;em&gt;any&lt;/em&gt; programming interface (let alone a beginner&amp;rsquo;s programming book) which solves this problem.
Once the beginner has solved a problem and submitted her program, it is lost in the ether.
She goes about her life and (to no fault of her own) effectively purges whatever she learned.
This is really more of a problem with books in general, because there is no place other than your own brain to keep the knowledge you learned.&lt;/p&gt;
&lt;p&gt;Well, computers have memory, and a sufficiently interactive programming environment should really &lt;em&gt;remember&lt;/em&gt; the code it runs.&lt;/p&gt;
&lt;p&gt;Whenever a beginner correctly uses a function, syntactic construct, or other piece of source code, the book ought to remember that.
Whenever a beginner writes some code that generates an error, and then fixes that error with a code change, that&amp;rsquo;s a huge success! The book ought to congratulate and remember that also.
She should then have the immediate ability to recall that success in another context.&lt;/p&gt;
&lt;p&gt;If I used &lt;code&gt;input().split()&lt;/code&gt; on problem 1.c, I should be reminded of it when I write &lt;code&gt;input().split()&lt;/code&gt; on problem 13.a.
Because the amount of code the beginner will write while following the book will be low (maybe 500 lines total?), and will usually consist of the same basic functions, I don&amp;rsquo;t see any reason this should not be feasible.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;m sure there is a ton of work going on in the digital textbook space, but from what I see, the majority of &amp;ldquo;Teach yourself Python!&amp;rdquo; books/courses online fall into the MVP-product with superstar-marketing category.
Maybe that&amp;rsquo;s simply the economics of the space, but I can&amp;rsquo;t help but feel we as software developers could do a lot more to craft a wholly interactive and integrated guided experience to learning programming.
There seem to be tons of books, videos, and blog posts for every concept a beginner would ever want to know about Python, but none satisfy the level of interactivity I feel is really needed.
My sister&amp;rsquo;s girlfriend said to me &amp;ldquo;I have no idea how the other students are managing without a &lt;em&gt;professional software engineer&lt;/em&gt; helping them.&amp;rdquo;
I don&amp;rsquo;t know either, but the books are definitely not sufficient.&lt;/p&gt;
</description>
       </item>
       
       <item>
         <title>Libraries for Web Development</title>
         <link>https://mjdiloreto.github.io/posts/libraries-for-web-development/</link>
         <pubDate>Sun, 18 Apr 2021 21:09:00 -0400</pubDate>
         
         <guid>https://mjdiloreto.github.io/posts/libraries-for-web-development/</guid>
         <description>&lt;p&gt;A list of neat and nifty libraries I&amp;rsquo;ve stumbled across which have piqued my interest enough for me to save them.
Keeping track of them here in this list for my future reference.&lt;/p&gt;
&lt;h2 id=&#34;in-the-browser&#34;&gt;In the Browser&lt;/h2&gt;
&lt;h3 id=&#34;analytics&#34;&gt;Analytics&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://counter.dev&#34;&gt;counter.dev&lt;/a&gt;: Simple, open-source, free (as in beer), privacy-focused analytics.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;built-on-react&#34;&gt;Built on React&lt;/h3&gt;
&lt;p&gt;React wins the web by converting the problem of UI to a function:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;V = F(D)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here are some projects which compose with that simple function.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blitzjs.com&#34;&gt;Blitz.js&lt;/a&gt;: Full-stack batteries-included React Framework. 0-API. Comes with Routing, Authentication (sign-up, log in, password reset) preconfigured. Would use for a hackathon project.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;data-visualization&#34;&gt;Data Visualization&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://formidable.com/open-source/victory/&#34;&gt;Victory&lt;/a&gt;: Easy to use Charts and data visualization components for React. Works with React Native too(!)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.highcharts.com/demo&#34;&gt;Highcharts&lt;/a&gt;: Modular library of many chart types with React or plain js bindings.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chartscss.org/&#34;&gt;Charts.scss&lt;/a&gt;: Boom, no need for React at all. Charts directly in css baby. Could be really cool in conjuction with htmx.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://reactflow.dev/examples&#34;&gt;React flow&lt;/a&gt;: Node editor for building flowcharts / graph-based diagrams with interactive editing, minimap, and more.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://riccardoscalco.it/textures/&#34;&gt;Textures.js&lt;/a&gt;: SVG patterns for data visualization. Trivial to use and beautiful.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;dates&#34;&gt;Dates&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;//js-joda.github.io/js-joda/&#34;&gt;JS-Joda&lt;/a&gt;: Lower adoption than date-fns.
Immutable implementation of dates (Does not wrap the native JS &lt;code&gt;Date&lt;/code&gt; object.
Different classes of dates for different use-cases:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;LocalDate (dates like birthdays or holidays)&lt;/li&gt;
&lt;li&gt;Period (between 2 dates)&lt;/li&gt;
&lt;li&gt;Duration (scalar time)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://date-fns.org&#34;&gt;Date-fns:&lt;/a&gt; Consistent, complete, immutable.&lt;/p&gt;
&lt;p&gt;&lt;a id=&#34;org6911992&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;High adoption (recommended from &lt;code&gt;moment.js&lt;/code&gt; (the easiest/most intuitive date library I&amp;rsquo;ve encountered)).
Wraps the Native &lt;code&gt;Date&lt;/code&gt; object.
Has an FP submodule providing convenience for functional-style programming.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;dom-styling&#34;&gt;DOM styling&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://styled-components.com&#34;&gt;Styled Components&lt;/a&gt;: Directly associate React Components with styles without the need for global style sheets.
Good for building highly modular (read standalone) components.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://react.semantic-ui.com&#34;&gt;Semantic UI:&lt;/a&gt; words &lt;code&gt;=&lt;/code&gt; classnames. Create highly readable &amp;ldquo;semantic&amp;rdquo; UI code with a decent selection of components&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/dwyl/learn-tachyons&#34;&gt;Tachyons&lt;/a&gt;: Functional terse css classes. Might be based off tailwind, not sure.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://roughnotation.com/&#34;&gt;Rough Notation&lt;/a&gt;: Create + animate &amp;ldquo;hand-drawn&amp;rdquo; annotations on top of html.
Super simple and cool effect.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;dope-stylesheets&#34;&gt;Dope stylesheets&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://nostalgic-css.github.io/NES.css/&#34;&gt;NES.css&lt;/a&gt;: Stylesheet to emulate old NES style interface. Certified dope.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;react-alternatives&#34;&gt;React alternatives&lt;/h3&gt;
&lt;p&gt;Alternatives to the classic client-side rendered react SPA.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://htmx.org/examples/&#34;&gt;htmx&lt;/a&gt;: Build SPAs directly onto html elements using attributes.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;htmx allows you to access AJAX, CSS Transitions, WebSockets and Server Sent Events directly in HTML, using attributes, so you can build modern user interfaces with the simplicity and power of hypertext.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;small - 10k minified + gzipped. Cool author.&lt;/p&gt;
&lt;h3 id=&#34;misc-dot&#34;&gt;Misc.&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://quotebacks.net/&#34;&gt;Quotebacks&lt;/a&gt;: Create nice-looking and functional quotes to external resources. Mostly used in the blogosphere.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;not-the-browser&#34;&gt;Not the Browser&lt;/h2&gt;
&lt;h3 id=&#34;web-hosting&#34;&gt;Web hosting&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.netlify.com/&#34;&gt;Netlify&lt;/a&gt;: The best. use it.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://coollabs.io/coolify&#34;&gt;Coolify&lt;/a&gt;: Open-source, indie-hacker-esque Netlify alternative. Not clear what pricing is like.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://raw.githack.com/&#34;&gt;raw.githack.com&lt;/a&gt;: CDN for files hosted in github repos. Good for indie-dev type projects.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;databases&#34;&gt;Databases&lt;/h3&gt;
&lt;h4 id=&#34;sql&#34;&gt;SQL&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://walkable.gitlab.io&#34;&gt;Walkable&lt;/a&gt;: hiccup-style sql (use EDN to describe SQL statements).&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://massivejs.org/&#34;&gt;Massive.js&lt;/a&gt;: A powerful &lt;code&gt;Node.js&lt;/code&gt; wrapper for (only) &lt;code&gt;postgres&lt;/code&gt; that doesn&amp;rsquo;t get in the way.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;replication&#34;&gt;Replication&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://litestream.io/getting-started/&#34;&gt;litestream&lt;/a&gt;: Replicate SQLite databases automatically in the background as a separate process.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;fun--data-sources&#34;&gt;(Fun) Data sources&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.rijksmuseum.nl/en/rijksstudio&#34;&gt;Rijksmuseum&lt;/a&gt;: Searchable compilation of over 700k high-res copies of famous paintings.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://omar.website/tabfs/&#34;&gt;Tabfs&lt;/a&gt;: Mount browser tabs as a local filesystem.
Allows easy querying of multiple open tabs, saving+reloading tabs + manipulating + communicating with browser.
Your own browsing sessions become the data source.
Literally endless possibilities for scripting.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://everynoise.com/&#34;&gt;Everynoise&lt;/a&gt;: Literally every spotify genre, with links to relevant artists / song snippets, and the relations between them all.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;machine-learning&#34;&gt;Machine learning&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://lobe.ai/&#34;&gt;Lobe&lt;/a&gt;: Easiest (superlative, yes) online training of machine learning models. It&amp;rsquo;s free for now.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nidhaloff/igel&#34;&gt;Igel&lt;/a&gt;: Train + fit, test + use machine learning models at the command line without writing code.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://alicevision.org/#meshroom&#34;&gt;Meshroom&lt;/a&gt;: Reconstruct images as 3D models, aka &lt;code&gt;Photogrammetry&lt;/code&gt; (your $2 word for the day).
Free (as in freedom, and also beer).&lt;/li&gt;
&lt;/ul&gt;
</description>
       </item>
       
       <item>
         <title>Emacs and Org-Mode</title>
         <link>https://mjdiloreto.github.io/posts/org-mode/</link>
         <pubDate>Sun, 01 Mar 2020 15:41:00 -0500</pubDate>
         
         <guid>https://mjdiloreto.github.io/posts/org-mode/</guid>
         <description>&lt;p&gt;Before this year I was always a vim guy.
I used vim for almost everything except JVM programming (Java, Scala. For those tasks I really prefer IntelliJ), but this year I installed emacs.
I figured if I really wanted to participate in the &lt;a href=&#34;https://wiki.c2.com/?EmacsVsVi&#34;&gt;holy flame war&lt;/a&gt; I better spend some time learning the other tool as well.
I used a few different tool for all my electronic tasks, and here&amp;rsquo;s what that landscape looked like for me before emacs:&lt;/p&gt;
&lt;h2 id=&#34;before-emacs&#34;&gt;Before Emacs&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Task&lt;/th&gt;
&lt;th&gt;Software&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Taking Notes&lt;/td&gt;
&lt;td&gt;vim, Github-flavored Markdown&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Keeping an agenda&lt;/td&gt;
&lt;td&gt;A simple note widget on my phone, Google Tasks&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Text file manipulation&lt;/td&gt;
&lt;td&gt;vim&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;python, C++&lt;/td&gt;
&lt;td&gt;vim with &lt;a href=&#34;https://github.com/ycm-core/YouCompleteMe&#34;&gt;YouCompleteMe&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Java, Scala, javascript&lt;/td&gt;
&lt;td&gt;IntelliJ&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;I was generally happy using this configuration, with the exception of my agenda.
I was too disorganized, with short-term tasks on a note widget on my phone&amp;rsquo;s home screen, and longer term tasks in Google Tasks.
Putting time constraints on the short-term tasks was basically impossible since the note app had no integrations with the calendar, and putting those things in Google Tasks was too onerous.
Also, I do most of my work on my laptop, so having to keep my phone by my side while working was a big pain.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;d recently watched a talk from &lt;a href=&#34;https://www.youtube.com/watch?v=SzA2YODtgK4&amp;amp;t=2851s&#34;&gt;Harry Schwartz&lt;/a&gt; on org-mode, and the simple plain-text markup with powerful keyboard shortcuts convinced me to give it a shot.
Actually, the keyboard shortcut for inserting timestamps, &lt;code&gt;C-u C-c .&lt;/code&gt;, is the single thing I saw in that talk that I &lt;em&gt;had&lt;/em&gt; to try.
So I opened emacs and&amp;hellip; couldn&amp;rsquo;t figure out how to make a new file.
So back to what I knew, &lt;code&gt;vim agenda.org&lt;/code&gt;, insert some markup, save, &lt;em&gt;then&lt;/em&gt; &lt;code&gt;emacs agenda.org&lt;/code&gt;.
I haven&amp;rsquo;t gone back to another way of organizing my tasks.&lt;/p&gt;
&lt;p&gt;I ought to write about my workflow with org-mode, but that&amp;rsquo;s for another day.
In fact, I liked it so much that I started taking all my class notes with emacs too.
So it begins, I&amp;rsquo;ve chosen a side on the holy war, and emacs is slowly conquering territory that used to belong firmly to vim.&lt;/p&gt;
&lt;h2 id=&#34;now-3-months-of-emacs&#34;&gt;Now, 3 months of emacs&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Task&lt;/th&gt;
&lt;th&gt;Software&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Taking Notes&lt;/td&gt;
&lt;td&gt;emacs, org-mode&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Keeping an agenda&lt;/td&gt;
&lt;td&gt;emacs, org-mode&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Text file manipulation&lt;/td&gt;
&lt;td&gt;vim&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;python, C++&lt;/td&gt;
&lt;td&gt;vim with &lt;a href=&#34;https://github.com/ycm-core/YouCompleteMe&#34;&gt;YouCompleteMe&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Java, Scala, javascript&lt;/td&gt;
&lt;td&gt;IntelliJ&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Actually, these changes coincided with me teaching myself Clojure, so the landscape &lt;em&gt;really&lt;/em&gt; looks like:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Task&lt;/th&gt;
&lt;th&gt;Software&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Taking Notes&lt;/td&gt;
&lt;td&gt;emacs, org-mode&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Keeping an agenda&lt;/td&gt;
&lt;td&gt;emacs, org-mode&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Clojure&lt;/td&gt;
&lt;td&gt;emacs, CIDR&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Text file manipulation&lt;/td&gt;
&lt;td&gt;vim&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;python, C++&lt;/td&gt;
&lt;td&gt;vim with &lt;a href=&#34;https://github.com/ycm-core/YouCompleteMe&#34;&gt;YouCompleteMe&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Java, Scala, javascript&lt;/td&gt;
&lt;td&gt;IntelliJ&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;And it&amp;rsquo;s definitely not looking good for vim down the road.
Right now my vim/emacs ratio is around 1:1, but I imagine this will shift more in emacs&amp;rsquo;s favor soon.
I &lt;em&gt;really&lt;/em&gt; like emacs.
It&amp;rsquo;s almost apples and oranges to vim, or maybe a more apt analogy would be &lt;em&gt;crab-apples&lt;/em&gt; to oranges, where you&amp;rsquo;ve only been eating crab-apples for years and didn&amp;rsquo;t know how good oranges tasted yet.&lt;/p&gt;
</description>
       </item>
       
     </channel>
   </rss>
